package main

import "fmt"

func test(arr [3]int) {
	arr[0] = 88
}

func test01(arr *[3]int) {
	(*arr)[0] = 88
}

func main() {

	// 1. 数组是多个相同类型的数据的组合，一个数组一旦声明/定义了，其长度是固定的，不能动态变化
	// 2. var arr []int 这时，arr 是一个切片 slice 不是数组
	// 3. 数组的类型可以任意类型，包括值类型和引用类型，但是不要混用
	// 4. 数组创建后，如果没有赋值，则有默认值 零值
	// 数值类型 = 0
	// 字符串类型 = ""
	// bool类型 = false
	// 5. 数组是值类型，在默认情况下是值传递，因此只会进行值拷贝。数组间不会相互影响
	// 6. 如果希望在函数中改变原数组的值，可以使用指针类型引用传递，考虑 fmt.Scan(&a)
	// 7. 长度是数组的一部分，在传递参数的时候一定要注意，[3]int 和 [4]int 是两种不同的数据类型

	// 这个值不会变，参照第 5 条
	var arr01 = [3]int{11, 22, 33}
	test(arr01)
	fmt.Println("arr01 = ", arr01)

	// 这个值会变，参照第 6 条
	var arr02 [3]int = [3]int{11, 22, 33}
	test01(&arr02)
	fmt.Println("arr02 = ", arr02)

}
