package utils  // 打包的基本语法
import f "fmt" // f 是 fmt 的别名

// 包的三个作用：
// 1. 区分相同的名字的函数、变量等标识符
// 2. 当程序文件很多的时候，可以很好的管理项目
// 3. 控制函数和变量等访问范围，即作用域

// 包使用上的细节点：
// 1. 在给一个文件打包时，该包对应一个文件夹，包的名字最好和文件夹的名字一致，一般为小写字母
// 2. 一个包中被其他文件调用的函数、变量、方法等，必须是首字母大写。否则无法被导出
// 3. 被调用时，格式为 包名.函数名 或者 包名.变量名 等
// 4. 包在被引入时，可以声明一个别名，需要注意的是，在引入别名后，原包名就不可以再被使用了，参考当前文件中的 f "fmt"
// 5. 在同个包下，不可以有相同的函数名、变量名，在不同的文件中也不行
// 6. 如果需要编译成二进制文件，就需要将包名定义为 main，即 package main 。如果写的是库，包名可以自定义，如 utils

func Cal(n1 float64, n2 float64, operator byte) float64 {
	var res float64
	switch operator {
	case '+':
		res = n1 + n2
	case '-':
		res = n1 - n2
	case '*':
		res = n1 * n2
	case '/':
		res = n1 / n2
	default:
		f.Println("运算符输入错误")
	}
	return res
}
